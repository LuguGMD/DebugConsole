name: Build project
on: 
  push:
    branches:
      - main
      
env:
  BUILD_DIR: "build/"
  FILE_NAME: "Build-"
  RELEASE_NAME: release-${{ github.sha }} 

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform: [StandaloneWindows64, WebGL]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
          
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
        
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      - uses: actions/upload-artifact@v4
        id: upload-step
        with:
          name: ${{ env.FILE_NAME }}${{ matrix.targetPlatform }}
          path: ${{ env.BUILD_DIR }}${{ matrix.targetPlatform }}
          
  release_build:
        permissions: write-all
        name: Release Build
        runs-on: ubuntu-latest
        needs: [buildForAllSupportedPlatforms] # Ensures this job runs after the build
        outputs:
          release_url: ${{ steps.release.outputs.upload_url }}
        steps:
          - name: Upload to GitHub Release
            id: release
            uses: softprops/action-gh-release@v1
            with:
              tag_name: ${{ env.RELEASE_NAME }}
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          

  upload_files:
        name: Upload ${{ matrix.targetPlatform }} zip to Release
        runs-on: ubuntu-latest
        needs: [release_build] # Ensures this job runs after the build
        strategy:
          fail-fast: false
          matrix:
            targetPlatform: [StandaloneWindows64, WebGL]
        steps:
          - name: Download Build Artifact
            uses: actions/download-artifact@v4
            id: download-step
            with:
              artifact-ids: ${{ needs.steps.upload-step.outputs.artifact-id }}
              path: ./download
            
          - name: Zip Build
            run: |
              cd download
              zip -r ../Build-${{ matrix.targetPlatform }}.zip .
              
          - name: List files
            run: ls -R
            
          - name: Upload Release Asset
            id: upload-release-asset 
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ needs.release_build.outputs.release_url }} 
              asset_path: ./${{ env.BUILD_DIR }}.zip${{ matrix.targetPlatform }}
              asset_name: ${{ env.FILE_NAME }}.zip${{ matrix.targetPlatform }}
              asset_content_type: application/zip
              
  send_email:
    name: Send email to ${{ matrix.emails }}
    runs-on: ubuntu-latest
    needs: [release_build] # Ensures this job runs after the build
    strategy:
      fail-fast: false
      matrix:
        targetPlatform: [StandaloneWindows64, WebGL]
        emails: [lugo.bhz@gmail.com]
    steps:
      - name: Send Email with Release Link
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "New Release"
          to: ${{ matrix.emails }}
          from: ${{ secrets.EMAIL_USERNAME }}
          body: Download link https://github.com/${{ github.repository }}/releases/download/${{ env.RELEASE_NAME }}/${{ env.FILE_NAME }}${{ matrix.targetPlatform }}.zip
              
      
