name: Build project
on: 
  push:
    branches:
      - main
jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
          
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
        
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      - uses: actions/upload-artifact@v4
        id: upload-step
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
          
  release_build:
        permissions: write-all
        name: Release Build
        runs-on: ubuntu-latest
        outputs:
          release_url: ${{ steps.release.outputs.upload_url }}
        needs: [buildForAllSupportedPlatforms] # Ensures this job runs after the build
        steps:
          - name: Download Build Artifact
            uses: actions/download-artifact@v4
            id: download-step
            with:
              artifact-ids: ${{ needs.steps.upload-step.outputs.artifact-id }}
              path: ./download
            
          - name: Zip Build
            run: |
              cd download
              zip -r ../Build-StandaloneWindows64.zip .
          - name: List files
            run: ls -R
            
          - name: Upload to GitHub Release
            id: release
            uses: softprops/action-gh-release@v1
            with:
              tag_name: release-${{ github.sha }} 
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          - name: Upload Release Asset
            id: upload-release-asset 
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
              asset_path: ./Build-StandaloneWindows64.zip
              asset_name: Build-StandaloneWindows64.zip
              asset_content_type: application/zip
            
  send_email:
        name: Send email to ${{ matrix.emails }}
        runs-on: ubuntu-latest
        needs: [release_build] # Ensures this job runs after the build
        strategy:
          fail-fast: false
          matrix:
            emails:
              - lugo.bhz@gmail.com
        steps:
          - name: Get Release Information
            uses: joutvhu/get-release@v1
            with:
              tag_name: release-${{ github.sha }} # Specify the tag name of the release you want
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
          - name: Send Email with Release Link
            uses: dawidd6/action-send-mail@v3
            with:
              server_address: smtp.gmail.com
              server_port: 587
              username: ${{ secrets.EMAIL_USERNAME }}
              password: ${{ secrets.EMAIL_PASSWORD }}
              subject: "New Build"
              to: ${{ matrix.emails }}
              from: ${{ secrets.EMAIL_USERNAME }}
              body: Donwload link ${{ needs.release_build.outputs.release_url }}
